import streamlit as st
import requests
import re
import json
from collections import OrderedDict

def get_wiktionary_synonyms(word, lang='uk'):
    """–û—Ç—Ä–∏–º–∞—Ç–∏ —Å–∏–Ω–æ–Ω—ñ–º–∏ –∑ Wiktionary"""
    try:
        search_word = word.lower()
        url = "https://en.wiktionary.org/w/api.php"
        params = {
            "action": "parse",
            "page": search_word,
            "format": "json",
            "prop": "wikitext",
            "section": 1
        }
        
        response = requests.get(url, params=params)
        data = response.json()
        wikitext = data.get("parse", {}).get("wikitext", {}).get("*", "")
        
        synonyms = []
        syn_pattern = re.compile(r'\{\{syn\|' + lang + r'\|([^}]+)\}\}')
        matches = syn_pattern.findall(wikitext)
        
        for match in matches:
            synonyms.extend([x.strip() for x in match.split('|') if x.strip()])
        
        return list(OrderedDict.fromkeys(synonyms))
    except Exception as e:
        st.error(f"–ü–æ–º–∏–ª–∫–∞ Wiktionary: {str(e)}")
        return []

def main():
    st.set_page_config(page_title="–ó–∞–º—ñ–Ω–Ω–∏–∫ —Å–∏–Ω–æ–Ω—ñ–º—ñ–≤", layout="centered")
    st.title("üîç –ó–∞–º—ñ–Ω–Ω–∏–∫ —Å–∏–Ω–æ–Ω—ñ–º—ñ–≤")
    
    # –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –≤–ª–∞—Å–Ω–∏–π —Å–ª–æ–≤–Ω–∏–∫
    custom_dict = {}
    with st.sidebar:
        st.header("–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è ‚öôÔ∏è")
        dict_file = st.file_uploader(
            "–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –≤–ª–∞—Å–Ω–∏–π —Å–ª–æ–≤–Ω–∏–∫ (JSON)",
            type=["json"],
            help="–ü—Ä–∏–∫–ª–∞–¥: {'word': ['—Å–∏–Ω–æ–Ω—ñ–º1', '—Å–∏–Ω–æ–Ω—ñ–º2']}"
        )
        if dict_file:
            try:
                custom_dict = json.load(dict_file)
                st.success(f"–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ {len(custom_dict)} –∑–∞–ø–∏—Å—ñ–≤!")
            except Exception as e:
                st.error(f"–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å–ª–æ–≤–Ω–∏–∫–∞: {str(e)}")

    # –ì–æ–ª–æ–≤–Ω–∏–π —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    input_text = st.text_area(
        "–í–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç:",
        "",
        help="–í–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç –¥–ª—è –∑–∞–º—ñ–Ω–∏ —Å–ª—ñ–≤ –Ω–∞ —Å–∏–Ω–æ–Ω—ñ–º–∏",
        placeholder="–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, \"–ü—Ä–∏–∫–ª–∞–¥ —Ç–µ–∫—Å—Ç—É –¥–ª—è –æ–±—Ä–æ–±–∫–∏\"",
        height=150
    )

    if st.button("–û–±—Ä–æ–±–∏—Ç–∏ —Ç–µ–∫—Å—Ç"):
        if not input_text.strip():
            st.error("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç!")
            return

        # –¢–æ–∫–µ–Ω—ñ–∑–∞—Ü—ñ—è —Ç–µ–∫—Å—Ç—É –Ω–∞ —Å–ª–æ–≤–∞ —Ç–∞ –Ω–µ-—Å–ª–æ–≤–∞
        tokens = re.findall(r'\w+|\W+', input_text)
        modified_tokens = []
        synonym_report = {}

        for token in tokens:
            if re.match(r'^\w+$', token) and token.isalpha():
                original_word = token
                search_word = original_word.lower()

                # –û—Ç—Ä–∏–º–∞—Ç–∏ —Å–∏–Ω–æ–Ω—ñ–º–∏ –∑ –æ–±–æ—Ö –¥–∂–µ—Ä–µ–ª
                custom_synonyms = custom_dict.get(search_word, [])
                wiki_synonyms = get_wiktionary_synonyms(search_word)

                # –ó–Ω–∞–π—Ç–∏ –ø–µ—Ä—à–∏–π –¥–æ—Å—Ç—É–ø–Ω–∏–π —Å–∏–Ω–æ–Ω—ñ–º
                first_synonym = None
                source = None
                if custom_synonyms:
                    first_synonym = custom_synonyms[0]
                    source = 'custom'
                elif wiki_synonyms:
                    first_synonym = wiki_synonyms[0]
                    source = 'wiktionary'

                if first_synonym:
                    modified_tokens.append(first_synonym)
                    synonym_report[original_word] = {
                        'replaced_with': first_synonym,
                        'custom_synonyms': custom_synonyms,
                        'wiki_synonyms': wiki_synonyms,
                        'source': source
                    }
                else:
                    modified_tokens.append(original_word)
            else:
                modified_tokens.append(token)

        # –í—ñ–¥–Ω–æ–≤–∏—Ç–∏ –∑–º—ñ–Ω–µ–Ω–∏–π —Ç–µ–∫—Å—Ç
        modified_text = ''.join(modified_tokens)

        # –í—ñ–¥–æ–±—Ä–∞–∑–∏—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏
        st.subheader("–ó–º—ñ–Ω–µ–Ω–∏–π —Ç–µ–∫—Å—Ç")
        st.text_area("–†–µ–∑—É–ª—å—Ç–∞—Ç", modified_text, height=300, key="modified_text")

        # –ü–æ–∫–∞–∑–∞—Ç–∏ –±–ª–æ–∫–∏ —Å–∏–Ω–æ–Ω—ñ–º—ñ–≤
        if synonym_report:
            st.subheader("–ó–∞–º—ñ–Ω–µ–Ω—ñ —Å–ª–æ–≤–∞")
            for word, data in synonym_report.items():
                source_name = "–í–ª–∞—Å–Ω–∏–π" if data['source'] == 'custom' else "Wiktionary"
                with st.expander(f"{word} ‚Üí {data['replaced_with']} ({source_name})"):
                    if data['custom_synonyms']:
                        st.write(f"**–ö–æ—Ä–∏—Å—Ç—É–≤–∞—Ü—å–∫—ñ —Å–∏–Ω–æ–Ω—ñ–º–∏:** {', '.join(data['custom_synonyms'])}")
                    if data['wiki_synonyms']:
                        st.write(f"**–°–∏–Ω–æ–Ω—ñ–º–∏ –∑ Wiktionary:** {', '.join(data['wiki_synonyms'])}")
            
            # –î–æ–¥–∞—Ç–∏ –∫–Ω–æ–ø–∫—É –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            st.download_button(
                label="–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑–º—ñ–Ω–µ–Ω–∏–π —Ç–µ–∫—Å—Ç",
                data=modified_text,
                file_name="–∑–∞–º—ñ–Ω–µ–Ω–∏–π_—Ç–µ–∫—Å—Ç.txt",
                mime="text/plain"
            )
        else:
            st.warning("–ñ–æ–¥–Ω–µ —Å–ª–æ–≤–æ –Ω–µ –±—É–ª–æ –∑–∞–º—ñ–Ω–µ–Ω–æ —Å–∏–Ω–æ–Ω—ñ–º–∞–º–∏.")

if __name__ == "__main__":
    main()